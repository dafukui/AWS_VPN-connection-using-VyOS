AWSTemplateFormatVersion: '2010-09-09'
Description: "Create VPC-B"
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Network Configuration"
        Parameters:
          - VPCName
          - VPCCider
          - IGWName
          - RouteTableName
          - NetworkAclName
          - SubnetName01
          - SubnetCider01
          - SubnetName02
          - SubnetCider02
      - Label:
          default: "EC2 Configuration [VyOS]"
        Parameters:
          - EC2Name01
          - EC2ImageID01
          - EC2InstanceType01
          - EC2KeyPair01
          - EC2VolumeSize01
          - SecurityGroupName01
      - Label:
          default: "EC2 Configuration [Windows]"
        Parameters:
          - EC2Name02
          - EC2ImageID02
          - EC2InstanceType02
          - EC2KeyPair02
          - EC2VolumeSize02
          - SecurityGroupName02
Parameters:
  VPCCider:
    Type: String
    Default: 192.168.0.0/16
  VPCName:
    Type: String
    Default: singapore-prd-vpc
  IGWName:
    Type: String
    Default: singapore-prd-igw
  RouteTableName:
    Type: String
    Default: singapore-prd-rtb
  NetworkAclName:
    Type: String
    Default: singapore-prd-acl
  SubnetName01:
    Type: String
    Default: singapore-prd-subnet01
  SubnetCider01:
    Type: String
    Default: 192.168.1.0/24
  SubnetName02:
    Type: String
    Default: singapore-prd-subnet02
  SubnetCider02:
    Type: String
    Default: 192.168.2.0/24
  EC2Name01:
    Type: String
    Default: singapore-prd-vyos
  EC2ImageID01:
    Type: String
    Default: ami-0ab2e769
  EC2InstanceType01:
    Type: String
    Default: t2.micro
  EC2KeyPair01:
    Type: AWS::EC2::KeyPair::KeyName
  EC2VolumeSize01:
    Type: String
    Default: 4
  SecurityGroupName01:
    Type: String
    Default: singapore-prd-vyos-sg
  EC2Name02:
    Type: String
    Default: singapore-prd-server
  EC2ImageID02:
    Type: String
    Default: ami-035c1e57873991ca2
  EC2InstanceType02:
    Type: String
    Default: t2.micro
  EC2KeyPair02:
    Type: AWS::EC2::KeyPair::KeyName
  EC2VolumeSize02:
    Type: String
    Default: 35
  SecurityGroupName02:
    Type: String
    Default: singapore-prd-server-sg
Resources:
  myVPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref VPCCider
      Tags:
        - Key: Name
          Value: !Ref VPCName
  myIGW:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: Name
          Value: !Ref IGWName
  myAttachIGW:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref myVPC
      InternetGatewayId: !Ref myIGW
  myRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref myVPC
      Tags:
        - Key: Name
          Value: !Ref RouteTableName
  myPublicrtb:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref myIGW
      RouteTableId: !Ref myRouteTable
  myACL:
    Type: "AWS::EC2::NetworkAcl"
    Properties:
      Tags:
        - Key: Name
          Value: !Ref NetworkAclName
      VpcId: !Ref myVPC
  myNetworkEgressAclEgressEntry:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: true
      NetworkAclId: !Ref myACL
      Protocol: -1
      RuleAction : allow
      RuleNumber : 100
  myNetworkEgressAclIngressEntry:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: false
      NetworkAclId: !Ref myACL
      Protocol: -1
      RuleAction : allow
      RuleNumber : 100
  mySubnet1a:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref myVPC
      AvailabilityZone: ap-southeast-1a
      CidrBlock: !Ref SubnetCider01
      Tags:
        - Key: Name
          Value: !Ref SubnetName01
  mySubnet1c:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref myVPC
      AvailabilityZone: ap-southeast-1c
      CidrBlock: !Ref SubnetCider02
      Tags:
        - Key: Name
          Value: !Ref SubnetName02
  myPublicRtb1:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref mySubnet1a
      RouteTableId: !Ref myRouteTable
  myPublicRtb2:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref mySubnet1c
      RouteTableId: !Ref myRouteTable
  myAclAssociation1:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      SubnetId: !Ref mySubnet1a
      NetworkAclId: !Ref myACL
  myAclAssociation2:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      SubnetId: !Ref mySubnet1c
      NetworkAclId: !Ref myACL
  mySecurityGroup1:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      VpcId: !Ref myVPC
      GroupName: !Ref SecurityGroupName01
      GroupDescription: "SecurityGroup for vyos"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '3389'
          ToPort: '3389'
          CidrIp: 192.168.2.0/24
        - IpProtocol: icmp
          FromPort: '-1'
          ToPort: '-1'
          CidrIp: 192.168.2.0/24
      Tags:
        - Key: Name
          Value:  !Ref SecurityGroupName01
  mySecurityGroup2:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      VpcId: !Ref myVPC
      GroupName: !Ref SecurityGroupName02
      GroupDescription: "SecurityGroup for Server"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3389'
          ToPort: '3389'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '3389'
          ToPort: '3389'
          CidrIp: 10.0.1.0/24
        - IpProtocol: icmp
          FromPort: '-1'
          ToPort: '-1'
          CidrIp: 10.0.1.0/24
      Tags:
        - Key: Name
          Value:  !Ref SecurityGroupName02
  myServer01:
    Type: "AWS::EC2::Instance"
    Properties:
      AvailabilityZone: ap-southeast-1a
      ImageId: !Ref EC2ImageID01
      InstanceType: !Ref EC2InstanceType01
      KeyName: !Ref EC2KeyPair01
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp2
            VolumeSize: !Ref EC2VolumeSize01
            DeleteOnTermination: true
      SecurityGroupIds:
        - !Ref mySecurityGroup1
      SubnetId: !Ref mySubnet1a
      Tags:
        - Key: Name
          Value: !Ref EC2Name01
  myServer02:
    Type: "AWS::EC2::Instance"
    Properties:
      AvailabilityZone: ap-southeast-1c
      ImageId: !Ref EC2ImageID02
      InstanceType: !Ref EC2InstanceType02
      KeyName: !Ref EC2KeyPair02
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeType: gp2
            VolumeSize: !Ref EC2VolumeSize02
            DeleteOnTermination: true
      SecurityGroupIds:
        - !Ref mySecurityGroup2
      SubnetId: !Ref mySubnet1c
      Tags:
        - Key: Name
          Value: !Ref EC2Name02
  myServer01EIP:
    Type: "AWS::EC2::EIP"
    Properties:
      InstanceId: !Ref myServer01